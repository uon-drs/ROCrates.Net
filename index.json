{
  "api/ROCrates.Converters.EntityConverter-1.html": {
    "href": "api/ROCrates.Converters.EntityConverter-1.html",
    "title": "Class EntityConverter<T> | ROCrates.Net",
    "keywords": "Class EntityConverter<T> Namespace ROCrates.Converters Assembly ROCrates.Net.dll public class EntityConverter<T> : JsonConverter<T> where T : Entity, new() Type Parameters T Inheritance object JsonConverter JsonConverter<T> EntityConverter<T> Inherited Members JsonConverter<T>.CanConvert(Type) JsonConverter<T>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<T>.WriteAsPropertyName(Utf8JsonWriter, T, JsonSerializerOptions) JsonConverter<T>.HandleNull object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EntityConverter() public EntityConverter() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) public override T? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader typeToConvert Type options JsonSerializerOptions Returns T Write(Utf8JsonWriter, T, JsonSerializerOptions) public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter value T options JsonSerializerOptions"
  },
  "api/ROCrates.Converters.html": {
    "href": "api/ROCrates.Converters.html",
    "title": "Namespace ROCrates.Converters | ROCrates.Net",
    "keywords": "Namespace ROCrates.Converters Classes EntityConverter<T>"
  },
  "api/ROCrates.Exceptions.CrateReadException.html": {
    "href": "api/ROCrates.Exceptions.CrateReadException.html",
    "title": "Class CrateReadException | ROCrates.Net",
    "keywords": "Class CrateReadException Namespace ROCrates.Exceptions Assembly ROCrates.Net.dll An exception that can be thrown whenever an RO-crate cannot be read. public class CrateReadException : Exception, ISerializable Inheritance object Exception CrateReadException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CrateReadException() public CrateReadException() CrateReadException(SerializationInfo, StreamingContext) protected CrateReadException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext CrateReadException(string?) public CrateReadException(string? message) Parameters message string CrateReadException(string?, Exception?) public CrateReadException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/ROCrates.Exceptions.html": {
    "href": "api/ROCrates.Exceptions.html",
    "title": "Namespace ROCrates.Exceptions | ROCrates.Net",
    "keywords": "Namespace ROCrates.Exceptions Classes CrateReadException An exception that can be thrown whenever an RO-crate cannot be read. MetadataException An error that should be thrown when something is wrong with an RO-Crate's metadata. It should be used when the deserialised metadata JSON is invalid, not when there is an issue reading the ro-crate-metadata.json file."
  },
  "api/ROCrates.Exceptions.MetadataException.html": {
    "href": "api/ROCrates.Exceptions.MetadataException.html",
    "title": "Class MetadataException | ROCrates.Net",
    "keywords": "Class MetadataException Namespace ROCrates.Exceptions Assembly ROCrates.Net.dll An error that should be thrown when something is wrong with an RO-Crate's metadata. It should be used when the deserialised metadata JSON is invalid, not when there is an issue reading the ro-crate-metadata.json file. public class MetadataException : Exception, ISerializable Inheritance object Exception MetadataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MetadataException() public MetadataException() MetadataException(SerializationInfo, StreamingContext) protected MetadataException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext MetadataException(string?) public MetadataException(string? message) Parameters message string MetadataException(string?, Exception?) public MetadataException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/ROCrates.html": {
    "href": "api/ROCrates.html",
    "title": "Namespace ROCrates | ROCrates.Net",
    "keywords": "Namespace ROCrates Classes ROCrate A class representing an RO-Crate. Use this class to read and write RO-Crates. TestingExtraTerms"
  },
  "api/ROCrates.Models.ComputationalWorkflow.html": {
    "href": "api/ROCrates.Models.ComputationalWorkflow.html",
    "title": "Class ComputationalWorkflow | ROCrates.Net",
    "keywords": "Class ComputationalWorkflow Namespace ROCrates.Models Assembly ROCrates.Net.dll A scientific workflow that was used (or can be used) to analyze or generate files in the RO-Crate. public class ComputationalWorkflow : File Inheritance object Entity DataEntity FileOrDir File ComputationalWorkflow Derived Workflow WorkflowDescription Inherited Members File.Write(string) FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ComputationalWorkflow() public ComputationalWorkflow() ComputationalWorkflow(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public ComputationalWorkflow(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a ComputationalWorkflow from JSON properties. public static ComputationalWorkflow? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the ComputationalWorkflow roCrate ROCrate The RO-Crate for the ComputationalWorkflow Returns ComputationalWorkflow The deserialised ComputationalWorkflow Serialize() Convert ComputationalWorkflow to JSON string. public override string Serialize() Returns string The ComputationalWorkflow as a JSON string. _empty() protected JsonObject _empty() Returns JsonObject"
  },
  "api/ROCrates.Models.ComputerLanguage.html": {
    "href": "api/ROCrates.Models.ComputerLanguage.html",
    "title": "Class ComputerLanguage | ROCrates.Net",
    "keywords": "Class ComputerLanguage Namespace ROCrates.Models Assembly ROCrates.Net.dll public class ComputerLanguage : ContextEntity Inheritance object Entity ContextEntity ComputerLanguage Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ComputerLanguage() public ComputerLanguage() ComputerLanguage(ROCrate?, string?, JsonObject?) public ComputerLanguage(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Properties AlternativeName public string? AlternativeName { get; set; } Property Value string Identifier public string? Identifier { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Url public string? Url { get; set; } Property Value string Version public string? Version { get; set; } Property Value string Methods Deserialize(string, ROCrate) Create a ComputerLanguage from JSON properties. public static ComputerLanguage? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the ComputerLanguage roCrate ROCrate The RO-Crate for the ComputerLanguage Returns ComputerLanguage The deserialised ComputerLanguage Serialize() Convert ComputerLanguage to JSON string. public override string Serialize() Returns string The ComputerLanguage as a JSON string."
  },
  "api/ROCrates.Models.ContextEntity.html": {
    "href": "api/ROCrates.Models.ContextEntity.html",
    "title": "Class ContextEntity | ROCrates.Net",
    "keywords": "Class ContextEntity Namespace ROCrates.Models Assembly ROCrates.Net.dll public class ContextEntity : Entity Inheritance object Entity ContextEntity Derived ComputerLanguage Person SoftwareApplication TestInstance TestService TestSuite Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ContextEntity() public ContextEntity() ContextEntity(ROCrate?, string?, JsonObject?) public ContextEntity(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Methods Deserialize(string, ROCrate) Create a ContextEntity from JSON properties. public static ContextEntity? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the ContextEntity roCrate ROCrate The RO-Crate for the ContextEntity Returns ContextEntity The deserialised ContextEntity Serialize() Convert ContextEntity to JSON string. public override string Serialize() Returns string The ContextEntity as a JSON string."
  },
  "api/ROCrates.Models.CreativeWork.html": {
    "href": "api/ROCrates.Models.CreativeWork.html",
    "title": "Class CreativeWork | ROCrates.Net",
    "keywords": "Class CreativeWork Namespace ROCrates.Models Assembly ROCrates.Net.dll public class CreativeWork : Entity Inheritance object Entity CreativeWork Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CreativeWork() public CreativeWork() CreativeWork(ROCrate?, string?, JsonObject?) public CreativeWork(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Methods Deserialize(string, ROCrate) Create a CreativeWork from JSON properties. public static CreativeWork? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the CreativeWork roCrate ROCrate The RO-Crate for the CreativeWork Returns CreativeWork The deserialised CreativeWork Serialize() Convert CreativeWork to JSON string. public override string Serialize() Returns string The CreativeWork as a JSON string."
  },
  "api/ROCrates.Models.DataEntity.html": {
    "href": "api/ROCrates.Models.DataEntity.html",
    "title": "Class DataEntity | ROCrates.Net",
    "keywords": "Class DataEntity Namespace ROCrates.Models Assembly ROCrates.Net.dll public class DataEntity : Entity Inheritance object Entity DataEntity Derived FileOrDir Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DataEntity() public DataEntity() DataEntity(ROCrate?, string?, JsonObject?) public DataEntity(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Methods Deserialize(string, ROCrate) Create a DataEntity from JSON properties. public static DataEntity? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the DataEntity roCrate ROCrate The RO-Crate for the DataEntity Returns DataEntity The deserialised DataEntity Serialize() Convert DataEntity to JSON string. public override string Serialize() Returns string The DataEntity as a JSON string. Write(string) public virtual void Write(string basePath) Parameters basePath string"
  },
  "api/ROCrates.Models.Dataset.html": {
    "href": "api/ROCrates.Models.Dataset.html",
    "title": "Class Dataset | ROCrates.Net",
    "keywords": "Class Dataset Namespace ROCrates.Models Assembly ROCrates.Net.dll public class Dataset : FileOrDir Inheritance object Entity DataEntity FileOrDir Dataset Derived RootDataset Inherited Members FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Dataset() public Dataset() Dataset(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public Dataset(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a Dataset from JSON properties. public static Dataset? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Dataset roCrate ROCrate The RO-Crate for the Dataset Returns Dataset The deserialised Dataset Serialize() Convert Dataset to JSON string. public override string Serialize() Returns string The Dataset as a JSON string. Write(string) Write the contents of a Dataset to disk. If the Dataset's source is remote, the contents will be downloaded to basePath. If the source is on disk, the contents will be copied under basePath. public override void Write(string basePath) Parameters basePath string The path under which the Dataset's parts will be written. Examples var url = \"https://hdruk.github.io/hutch/docs/devs\"; var dirName = url.Split('/').Last(); var dataset = new Models.Dataset( new ROCrate(\"myCrate.zip\"), source: url, validateUrl: true, fetchRemote: true); dataset.Write(\"myCrate\"); Assert.True(Directory.Exists(Path.Combine(\"myCrate\", dirName))); Exceptions DirectoryNotFoundException Thrown when the source directory is not a URL, but it doesn't exist. _empty() protected JsonObject _empty() Returns JsonObject"
  },
  "api/ROCrates.Models.Entity.html": {
    "href": "api/ROCrates.Models.Entity.html",
    "title": "Class Entity | ROCrates.Net",
    "keywords": "Class Entity Namespace ROCrates.Models Assembly ROCrates.Net.dll This class represents the base Entity used in an ROCrate. public class Entity Inheritance object Entity Derived ContextEntity CreativeWork DataEntity Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Entity() public Entity() Entity(ROCrate?, string?, JsonObject?) public Entity(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Properties Id public string Id { get; set; } Property Value string Properties public JsonObject Properties { get; set; } Property Value JsonObject RoCrate public ROCrate? RoCrate { get; set; } Property Value ROCrate Methods AppendTo<T>(string, T) Append a value to the entity's property. public void AppendTo<T>(string key, T value) where T : Entity Parameters key string The element to append the value to. value T The value to be appended. Type Parameters T The type of Entity to be appended. Examples var roCrate = new ROCrate(); var rootDataset = new RootDataset(roCrate); var person = new Person(roCrate, identifier: \"Alice\"); rootDataset.AppendTo(\"author\", person); Exceptions Exception Thrown when attempting to append to reserved key (those starting with '@'). NullReferenceException Thrown when value is null. DeleteProperty(string) Remove a property from the Properties field. public void DeleteProperty(string propertyName) Parameters propertyName string Deserialize(string, ROCrate) Create an Entity from JSON properties. public static Entity? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Entity roCrate ROCrate The RO-Crate for the Entity Returns Entity The deserialised Entity GetCanonicalId() Get the canonical ID of the crate that the entity is in. [Obsolete(\"GetCanonicalId is deprecated. Use Id property instead.\")] public string GetCanonicalId() Returns string GetProperty<T>(string) Retrieve a property from Properties deserialsed as type T. public T? GetProperty<T>(string propertyName) Parameters propertyName string The name of the property to retrieve. Returns T The property as type T if the property exists, or null if the property does no exist on the entity. T Type Parameters T The type to deserialise the property into. Serialize() Convert Entity to JSON string. public virtual string Serialize() Returns string The Entity as a JSON string. SetProperty<T>(string, T) Sersialise a property into the Properties field. This will update a property if it already exists. public void SetProperty<T>(string propertyName, T property) Parameters propertyName string property T Type Parameters T"
  },
  "api/ROCrates.Models.File.html": {
    "href": "api/ROCrates.Models.File.html",
    "title": "Class File | ROCrates.Net",
    "keywords": "Class File Namespace ROCrates.Models Assembly ROCrates.Net.dll This class represents a generic file entity that can go inside an RO-Crate. public class File : FileOrDir Inheritance object Entity DataEntity FileOrDir File Derived ComputationalWorkflow Metadata Preview TestDefinition Inherited Members FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors File() public File() File(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public File(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a File from JSON properties. public static File? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the File roCrate ROCrate The RO-Crate for the File Returns File The deserialised File Serialize() Convert File to JSON string. public override string Serialize() Returns string The File as a JSON string. Write(string) Write file contents to the specified path. e.g. The root path of an RO-Crate. If the file is a remote file, and fetchUrl is set to true, the file will be downloaded under \"basePath\". If the file is on disk, it will be copied to a new location under \"basePath\". In either case, the file will be saved to \"basePath/Id\" public override void Write(string basePath) Parameters basePath string The path the file will be written to. Examples var url = \"https://hdruk.github.io/hutch/docs/devs\"; var fileName = url.Split('/').Last(); var fileEntity = new Models.File( new ROCrate(), source: url, validateUrl: true, fetchRemote: true); fileEntity.Write(\"myCrate\");"
  },
  "api/ROCrates.Models.FileOrDir.html": {
    "href": "api/ROCrates.Models.FileOrDir.html",
    "title": "Class FileOrDir | ROCrates.Net",
    "keywords": "Class FileOrDir Namespace ROCrates.Models Assembly ROCrates.Net.dll public class FileOrDir : DataEntity Inheritance object Entity DataEntity FileOrDir Derived Dataset File Inherited Members DataEntity.Write(string) Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FileOrDir() public FileOrDir() FileOrDir(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public FileOrDir(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Fields _destPath protected string? _destPath Field Value string _fetchRemote protected bool _fetchRemote Field Value bool _source protected string _source Field Value string _validateUrl protected bool _validateUrl Field Value bool Methods Deserialize(string, ROCrate) Create a FileOrDir from JSON properties. public static FileOrDir? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the FileOrDir roCrate ROCrate The RO-Crate for the FileOrDir Returns FileOrDir The deserialised FileOrDir Serialize() Convert FileOrDir to JSON string. public override string Serialize() Returns string The FileOrDir as a JSON string."
  },
  "api/ROCrates.Models.html": {
    "href": "api/ROCrates.Models.html",
    "title": "Namespace ROCrates.Models | ROCrates.Net",
    "keywords": "Namespace ROCrates.Models Classes ComputationalWorkflow A scientific workflow that was used (or can be used) to analyze or generate files in the RO-Crate. ComputerLanguage ContextEntity CreativeWork DataEntity Dataset Entity This class represents the base Entity used in an ROCrate. File This class represents a generic file entity that can go inside an RO-Crate. FileOrDir Metadata RO-Crate Metadata file. Part Represents an \"ID tag\" linking a property in one object in an RO-Crate to another object in the same crate. Person Preview RootDataset SoftwareApplication TestDefinition TestInstance TestService TestSuite Workflow Legacy workflow, added for completeness. WorkflowDescription Abstract CWL description of the main workflow."
  },
  "api/ROCrates.Models.Metadata.html": {
    "href": "api/ROCrates.Models.Metadata.html",
    "title": "Class Metadata | ROCrates.Net",
    "keywords": "Class Metadata Namespace ROCrates.Models Assembly ROCrates.Net.dll RO-Crate Metadata file. public class Metadata : File Inheritance object Entity DataEntity FileOrDir File Metadata Inherited Members FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Metadata() public Metadata() Metadata(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public Metadata(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Fields FileName protected const string FileName = \"ro-crate-metadata.json\" Field Value string Profile protected const string Profile = \"https://w3id.org/ro/crate/1.1\" Field Value string Properties ExtraTerms public JsonObject? ExtraTerms { get; set; } Property Value JsonObject RootDataset public RootDataset? RootDataset { get; } Property Value RootDataset Methods Deserialize(string, ROCrate) Create a Metadata from JSON properties. public static Metadata? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Metadata roCrate ROCrate The RO-Crate for the Metadata Returns Metadata The deserialised Metadata Serialize() Convert Metadata to JSON string. public override string Serialize() Returns string The Metadata as a JSON string. Write(string) Write file contents to the specified path. e.g. The root path of an RO-Crate. If the file is a remote file, and fetchUrl is set to true, the file will be downloaded under \"basePath\". If the file is on disk, it will be copied to a new location under \"basePath\". In either case, the file will be saved to \"basePath/Id\" public override void Write(string basePath) Parameters basePath string The path the file will be written to. Examples var url = \"https://hdruk.github.io/hutch/docs/devs\"; var fileName = url.Split('/').Last(); var fileEntity = new Models.File( new ROCrate(), source: url, validateUrl: true, fetchRemote: true); fileEntity.Write(\"myCrate\");"
  },
  "api/ROCrates.Models.Part.html": {
    "href": "api/ROCrates.Models.Part.html",
    "title": "Class Part | ROCrates.Net",
    "keywords": "Class Part Namespace ROCrates.Models Assembly ROCrates.Net.dll Represents an \"ID tag\" linking a property in one object in an RO-Crate to another object in the same crate. public class Part Inheritance object Part Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Part() public Part() Properties Id [JsonPropertyName(\"@id\")] public string Id { get; set; } Property Value string"
  },
  "api/ROCrates.Models.Person.html": {
    "href": "api/ROCrates.Models.Person.html",
    "title": "Class Person | ROCrates.Net",
    "keywords": "Class Person Namespace ROCrates.Models Assembly ROCrates.Net.dll public class Person : ContextEntity Inheritance object Entity ContextEntity Person Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Person() public Person() Person(ROCrate?, string?, JsonObject?) public Person(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Methods Deserialize(string, ROCrate) Create a Person from JSON properties. public static Person? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Person roCrate ROCrate The RO-Crate for the Person Returns Person The deserialised Person Serialize() Convert Person to JSON string. public override string Serialize() Returns string The Person as a JSON string."
  },
  "api/ROCrates.Models.Preview.html": {
    "href": "api/ROCrates.Models.Preview.html",
    "title": "Class Preview | ROCrates.Net",
    "keywords": "Class Preview Namespace ROCrates.Models Assembly ROCrates.Net.dll public class Preview : File Inheritance object Entity DataEntity FileOrDir File Preview Inherited Members FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Preview() public Preview() Preview(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public Preview(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Fields FileName protected const string FileName = \"ro-crate-preview.html\" Field Value string Methods Deserialize(string, ROCrate) Create a Preview from JSON properties. public static Preview? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Preview roCrate ROCrate The RO-Crate for the Preview Returns Preview The deserialised Preview Serialize() Convert Preview to JSON string. public override string Serialize() Returns string The Preview as a JSON string. Write(string) Write the HTML preview of the RO-Crate. public override void Write(string basePath) Parameters basePath string The directory where the preview file will be written. _empty() protected JsonObject _empty() Returns JsonObject"
  },
  "api/ROCrates.Models.RootDataset.html": {
    "href": "api/ROCrates.Models.RootDataset.html",
    "title": "Class RootDataset | ROCrates.Net",
    "keywords": "Class RootDataset Namespace ROCrates.Models Assembly ROCrates.Net.dll public class RootDataset : Dataset Inheritance object Entity DataEntity FileOrDir Dataset RootDataset Inherited Members Dataset.Write(string) Dataset._empty() FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RootDataset() public RootDataset() RootDataset(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public RootDataset(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a RootDataset from JSON properties. public static RootDataset? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the RootDataset roCrate ROCrate The RO-Crate for the RootDataset Returns RootDataset The deserialised RootDataset Serialize() Convert RootDataset to JSON string. public override string Serialize() Returns string The RootDataset as a JSON string."
  },
  "api/ROCrates.Models.SoftwareApplication.html": {
    "href": "api/ROCrates.Models.SoftwareApplication.html",
    "title": "Class SoftwareApplication | ROCrates.Net",
    "keywords": "Class SoftwareApplication Namespace ROCrates.Models Assembly ROCrates.Net.dll public class SoftwareApplication : ContextEntity Inheritance object Entity ContextEntity SoftwareApplication Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SoftwareApplication() public SoftwareApplication() SoftwareApplication(ROCrate?, string?, JsonObject?) public SoftwareApplication(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Methods Deserialize(string, ROCrate) Create a SoftwareApplication from JSON properties. public static SoftwareApplication? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the SoftwareApplication roCrate ROCrate The RO-Crate for the SoftwareApplication Returns SoftwareApplication The deserialised SoftwareApplication Serialize() Convert SoftwareApplication to JSON string. public override string Serialize() Returns string The SoftwareApplication as a JSON string."
  },
  "api/ROCrates.Models.TestDefinition.html": {
    "href": "api/ROCrates.Models.TestDefinition.html",
    "title": "Class TestDefinition | ROCrates.Net",
    "keywords": "Class TestDefinition Namespace ROCrates.Models Assembly ROCrates.Net.dll public class TestDefinition : File Inheritance object Entity DataEntity FileOrDir File TestDefinition Inherited Members File.Write(string) FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestDefinition() public TestDefinition() TestDefinition(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public TestDefinition(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Properties ConformsTo public Part? ConformsTo { get; set; } Property Value Part EngineVersion public string? EngineVersion { get; set; } Property Value string Methods Deserialize(string, ROCrate) Create a TestDefinition from JSON properties. public static TestDefinition? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the TestDefinition roCrate ROCrate The RO-Crate for the TestDefinition Returns TestDefinition The deserialised TestDefinition Serialize() Convert TestDefinition to JSON string. public override string Serialize() Returns string The TestDefinition as a JSON string."
  },
  "api/ROCrates.Models.TestInstance.html": {
    "href": "api/ROCrates.Models.TestInstance.html",
    "title": "Class TestInstance | ROCrates.Net",
    "keywords": "Class TestInstance Namespace ROCrates.Models Assembly ROCrates.Net.dll public class TestInstance : ContextEntity Inheritance object Entity ContextEntity TestInstance Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestInstance() public TestInstance() TestInstance(ROCrate?, string?, JsonObject?) public TestInstance(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Properties Name public string? Name { get; set; } Property Value string Resource public string? Resource { get; set; } Property Value string RunsOn public TestService? RunsOn { get; set; } Property Value TestService Url public string? Url { get; set; } Property Value string Methods Deserialize(string, ROCrate) Create a TestInstance from JSON properties. public static TestInstance? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the TestInstance roCrate ROCrate The RO-Crate for the TestInstance Returns TestInstance The deserialised TestInstance Serialize() Convert TestInstance to JSON string. public override string Serialize() Returns string The TestInstance as a JSON string."
  },
  "api/ROCrates.Models.TestService.html": {
    "href": "api/ROCrates.Models.TestService.html",
    "title": "Class TestService | ROCrates.Net",
    "keywords": "Class TestService Namespace ROCrates.Models Assembly ROCrates.Net.dll public class TestService : ContextEntity Inheritance object Entity ContextEntity TestService Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestService() public TestService() TestService(ROCrate?, string?, JsonObject?) public TestService(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Properties Name public string? Name { get; set; } Property Value string Url public string? Url { get; set; } Property Value string Methods Deserialize(string, ROCrate) Create a TestService from JSON properties. public static TestService? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the TestService roCrate ROCrate The RO-Crate for the TestService Returns TestService The deserialised TestService Serialize() Convert TestService to JSON string. public override string Serialize() Returns string The TestService as a JSON string."
  },
  "api/ROCrates.Models.TestSuite.html": {
    "href": "api/ROCrates.Models.TestSuite.html",
    "title": "Class TestSuite | ROCrates.Net",
    "keywords": "Class TestSuite Namespace ROCrates.Models Assembly ROCrates.Net.dll public class TestSuite : ContextEntity Inheritance object Entity ContextEntity TestSuite Inherited Members Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestSuite() public TestSuite() TestSuite(ROCrate?, string?, JsonObject?) public TestSuite(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null) Parameters crate ROCrate identifier string properties JsonObject Properties ConformsTo public Part? ConformsTo { get; set; } Property Value Part EngineVersion public string? EngineVersion { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Methods Deserialize(string, ROCrate) Create a TestSuite from JSON properties. public static TestSuite? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the TestSuite roCrate ROCrate The RO-Crate for the TestSuite Returns TestSuite The deserialised TestSuite Serialize() Convert TestSuite to JSON string. public override string Serialize() Returns string The TestSuite as a JSON string."
  },
  "api/ROCrates.Models.Workflow.html": {
    "href": "api/ROCrates.Models.Workflow.html",
    "title": "Class Workflow | ROCrates.Net",
    "keywords": "Class Workflow Namespace ROCrates.Models Assembly ROCrates.Net.dll Legacy workflow, added for completeness. public class Workflow : ComputationalWorkflow Inheritance object Entity DataEntity FileOrDir File ComputationalWorkflow Workflow Inherited Members ComputationalWorkflow._empty() File.Write(string) FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Workflow() public Workflow() Workflow(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public Workflow(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a Workflow from JSON properties. public static Workflow? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the Workflow roCrate ROCrate The RO-Crate for the Workflow Returns Workflow The deserialised Workflow Serialize() Convert Workflow to JSON string. public override string Serialize() Returns string The Workflow as a JSON string."
  },
  "api/ROCrates.Models.WorkflowDescription.html": {
    "href": "api/ROCrates.Models.WorkflowDescription.html",
    "title": "Class WorkflowDescription | ROCrates.Net",
    "keywords": "Class WorkflowDescription Namespace ROCrates.Models Assembly ROCrates.Net.dll Abstract CWL description of the main workflow. public class WorkflowDescription : ComputationalWorkflow Inheritance object Entity DataEntity FileOrDir File ComputationalWorkflow WorkflowDescription Inherited Members ComputationalWorkflow._empty() File.Write(string) FileOrDir._source FileOrDir._destPath FileOrDir._fetchRemote FileOrDir._validateUrl Entity.GetCanonicalId() Entity.GetProperty<T>(string) Entity.SetProperty<T>(string, T) Entity.AppendTo<T>(string, T) Entity.DeleteProperty(string) Entity.RoCrate Entity.Id Entity.Properties object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WorkflowDescription() public WorkflowDescription() WorkflowDescription(ROCrate?, string?, JsonObject?, string?, string?, bool, bool) public WorkflowDescription(ROCrate? crate = null, string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters crate ROCrate identifier string properties JsonObject source string destPath string fetchRemote bool validateUrl bool Methods Deserialize(string, ROCrate) Create a WorkflowDescription from JSON properties. public static WorkflowDescription? Deserialize(string entityJson, ROCrate roCrate) Parameters entityJson string The JSON representing the WorkflowDescription roCrate ROCrate The RO-Crate for the WorkflowDescription Returns WorkflowDescription The deserialised WorkflowDescription Serialize() Convert WorkflowDescription to JSON string. public override string Serialize() Returns string The WorkflowDescription as a JSON string."
  },
  "api/ROCrates.ROCrate.html": {
    "href": "api/ROCrates.ROCrate.html",
    "title": "Class ROCrate | ROCrates.Net",
    "keywords": "Class ROCrate Namespace ROCrates Assembly ROCrates.Net.dll A class representing an RO-Crate. Use this class to read and write RO-Crates. public class ROCrate Inheritance object ROCrate Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ROCrate() Initialise a new empty ROCrate object. public ROCrate() Fields Entities A Dictionary<TKey, TValue> containing all the entities in the ROCrate. The keys are the same as the @id tags in the ro-crate-metadata.json @graph. public Dictionary<string, Entity> Entities Field Value Dictionary<string, Entity> Metadata A reference to the Metadata object of the ROCrate. public Metadata Metadata Field Value Metadata Preview A reference to the Preview object of the ROCrate. public Preview Preview Field Value Preview RootDataset A reference to the RootDataset object of the ROCrate. public RootDataset RootDataset Field Value RootDataset Methods Add(params Entity[]) Add entities to an ROCrate. public void Add(params Entity[] entities) Parameters entities Entity[] The entities to add the RO-Crate. Examples var roCrate = new ROCrate(); var textFile = new File(roCrate, source: \"my-file.txt\"); var imageFile = new File(roCrate, source: \"my-image.png\"); var person = new Person(roCrate); roCrate.Add(textFile, imageFile, person); AddDataset(string?, JsonObject?, string?, string?, bool, bool) Add a dataset to the ROCrate and return the created Dataset object. public Dataset AddDataset(string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters identifier string The unique identifier. properties JsonObject Additional properties of the dataset. source string The path to the dataset. destPath string The path to where dataset will be saved. fetchRemote bool Fetch the dataset from remote location? validateUrl bool Check the URL? Returns Dataset A new Dataset with the given parameters. Examples var roCrate = new ROCrate(); var dataset = roCrate.AddDataset(); AddFile(string?, JsonObject?, string?, string?, bool, bool) Add a file to the ROCrate and return the created File object. public File AddFile(string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters identifier string The unique identifier. properties JsonObject Additional properties of the file. source string The path to the file. destPath string The path to where file will be saved. fetchRemote bool Fetch the file from remote location? validateUrl bool Check the URL? Returns File A new File with the given parameters. Examples var roCrate = new ROCrate(); var file = roCrate.AddFile(); AddPerson(string?, JsonObject?) Add a person to the ROCrate and return the created Person object. public Person AddPerson(string? identifier = null, JsonObject? properties = null) Parameters identifier string The unique identifier of the person. properties JsonObject Additional properties of the person. Returns Person Examples var roCrate = new ROCrate(); var person = roCrate.AddPerson(); Remarks A new Person with the given parameters. AddTestDefinition(string?, JsonObject?, string?, string?, bool, bool) Add a test definition to the ROCrate and return the created TestDefinition object. public TestDefinition AddTestDefinition(string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters identifier string The unique identifier. properties JsonObject Additional properties of the test definition. source string The path to the test definition file. destPath string The path to where test definition file will be saved. fetchRemote bool Fetch the test definition from remote location? validateUrl bool Check the URL? Returns TestDefinition A new TestDefinition with the given parameters. Examples var roCrate = new ROCrate(); var testDefinition = roCrate.AddTestDefinition(); AddTestInstance(TestSuite, string, string, TestService?, string?) Add a test instance to the ROCrate and return the TestInstance object. public TestInstance AddTestInstance(TestSuite testSuite, string url, string resource = \"\", TestService? testService = null, string? name = null) Parameters testSuite TestSuite The suite the test instance is run in. url string The URL to the test instance. resource string The resource of the test instance. testService TestService The service used to run the test instance. name string The name of the test instance. Returns TestInstance The TestInstance with the given parameters. Examples var roCrate = new ROCrate(); var testInstance = roCrate.AddTestInstance(); AddTestSuite(string?, string?, Entity?) Add a test suite to the ROCrate and return the created TestSuite object. public TestSuite AddTestSuite(string? identifier = null, string? name = null, Entity? mainEntity = null) Parameters identifier string The identifier of the test suite. name string The name of the test suite. mainEntity Entity The main entity of the test suite. Returns TestSuite The TestSuite object with the given parameters. Examples var roCrate = new ROCrate(); var testSuite = roCrate.AddTestSuite(); AddWorkflow(string?, JsonObject?, string?, string?, bool, bool) Add a workflow to the ROCrate and return the created ComputationalWorkflow object. public ComputationalWorkflow AddWorkflow(string? identifier = null, JsonObject? properties = null, string? source = null, string? destPath = null, bool fetchRemote = false, bool validateUrl = false) Parameters identifier string The unique identifier. properties JsonObject Additional properties of the workflow. source string The path to the workflow file. destPath string The path to where workflow file will be saved. fetchRemote bool Fetch the workflow from remote location? validateUrl bool Check the URL? Returns ComputationalWorkflow A new ComputationalWorkflow with the given parameters. Examples var roCrate = new ROCrate(); var workflow = roCrate.AddWorkflow(); Convert(string) Convert a directory into an RO-Crate. This method iterates over the files and directories contained inside source and populates an ROCrate object with entities representing the contents of the RO-Crate. The ro-crate-metadata.json and ro-crate-preview.html files are then saved into source public void Convert(string source) Parameters source string The path to the directory to be converted to an RO-Crate. Examples var roCrate = new ROCrate(); roCrate.Convert(\"convertMe\"); Initialise(string) Initialise an ROCrate object from the contents of a directory that is a valid RO-Crate. This method assumes that all files and directories described by the metadata exist on disk. It will not fetch them from remote locations. public void Initialise(string source) Parameters source string The path to the directory containing the RO-Crate to initialise an ROCrate from. Exceptions CrateReadException Thrown when there is an issue reading the RO-Crate. MetadataException Thrown when there is an issue with the RO-Crate's metadata. ResolveId(string) Resolves URI for a given ID. [Obsolete(\"ResolveId is deprecated\")] public string ResolveId(string id) Parameters id string The ID to be resolved. Returns string The resolved URI for the given ID. Save(string?, bool) Save the ROCrate to disk. public void Save(string? location = null, bool zip = false) Parameters location string The directory where the data entities will be written. This will become a .zip file with the name {location}.zip if zip is true. If location is null, the current working directory will be used. zip bool If true, save the RO-Crate as a .zip file, else save to a directory. Default: false"
  },
  "api/ROCrates.TestingExtraTerms.html": {
    "href": "api/ROCrates.TestingExtraTerms.html",
    "title": "Class TestingExtraTerms | ROCrates.Net",
    "keywords": "Class TestingExtraTerms Namespace ROCrates Assembly ROCrates.Net.dll public class TestingExtraTerms Inheritance object TestingExtraTerms Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TestingExtraTerms() public TestingExtraTerms() Fields Definition [JsonPropertyName(\"definition\")] public string Definition Field Value string EngineVersion [JsonPropertyName(\"engineVersion\")] public string EngineVersion Field Value string GithubService [JsonPropertyName(\"GithubService\")] public string GithubService Field Value string Instance [JsonPropertyName(\"instance\")] public string Instance Field Value string JenkinsService [JsonPropertyName(\"JenkinsService\")] public string JenkinsService Field Value string PlanemoEngine [JsonPropertyName(\"PlanemoEngine\")] public string PlanemoEngine Field Value string Resource [JsonPropertyName(\"resource\")] public string Resource Field Value string RunsOn [JsonPropertyName(\"runsOn\")] public string RunsOn Field Value string TestDefinition [JsonPropertyName(\"TestDefinition\")] public string TestDefinition Field Value string TestInstance [JsonPropertyName(\"TestInstance\")] public string TestInstance Field Value string TestService [JsonPropertyName(\"TestService\")] public string TestService Field Value string TestSuite [JsonPropertyName(\"TestSuite\")] public string TestSuite Field Value string TravisService [JsonPropertyName(\"TravisService\")] public string TravisService Field Value string"
  },
  "articles/installation.html": {
    "href": "articles/installation.html",
    "title": "Installation | ROCrates.Net",
    "keywords": "Installation Install with .NET CLI dotnet add package ROCrates.Net [--version <version>] Add to .csproj <PackageReference Include=\"ROCrates.Net\" Version=\"<version>\" /> See also The package can be viewed on Nuget along with alternative installation instructions and versions."
  },
  "articles/tutorials/converting.html": {
    "href": "articles/tutorials/converting.html",
    "title": "Converting a directory to an RO-Crate | ROCrates.Net",
    "keywords": "Converting a directory to an RO-Crate Convert a Directory on disk to an RO-Crate Before: | MyDirectory |- file1.txt |- subdir |-- file1.txt |-- file2.txt using ROCrates; // Create a blank `ROCrate` object var roCrate = new ROCrate(); // Convert the RO-Crate and add the entities to the `ROCrate` object roCrate.Convert(\"MyDirectory\"); After: | MyDirectory |- file1.txt |- ro-crate-metadata.json |- ro-crate-preview.html |- subdir |-- file1.txt |-- file2.txt"
  },
  "articles/tutorials/index.html": {
    "href": "articles/tutorials/index.html",
    "title": "Tutorials | ROCrates.Net",
    "keywords": "Tutorials Initialising an ROCrate Converting a directory to an RO-Crate"
  },
  "articles/tutorials/initialising.html": {
    "href": "articles/tutorials/initialising.html",
    "title": "Initialising an ROCrate | ROCrates.Net",
    "keywords": "Initialising an ROCrate Initialise a ROCrate from a directory. using ROCrates; // Create a blank `ROCrate` object var roCrate = new ROCrate(); // Initialise the `ROCrate` object roCrate.Initialise(\"MyROCrate\") Initialise a ROCrate from a zipped RO-Crate. using System.IO.Compression; using ROCrates; // Unzip the directory Zipfile.ExtractToDirectory(\"MyROCrate.zip\", \"MyROCrate\"); // Create a blank `ROCrate` object var roCrate = new ROCrate(); // Initialise the `ROCrate` object roCrate.Initialise(\"MyROCrate\")"
  },
  "index.html": {
    "href": "index.html",
    "title": "ROCrates.Net | ROCrates.Net",
    "keywords": "ROCrates.Net Welcome to ROCrates.Net! This package is used to programmatically create and manipulate RO-Crates. ROCrates.Net drew inspiration from the Python library rocrate and is being developed for use in C#/.NET projects. Quick Links: Installation Tutorials API Reference"
  }
}